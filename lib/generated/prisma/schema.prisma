// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ───────────────────────────────────
// USER MODEL
// ───────────────────────────────────

model User {
  id        String   @id @default(cuid()) @map("user_id")
  email     String   @unique @map("email")
  password  String?  @map("password")
  name      String?  @map("name")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relationships
  lists List[]

  @@map("users")
}

// ───────────────────────────────────
// LIST MODEL
// ───────────────────────────────────

model List {
  id        String   @id @default(cuid()) @map("list_id")
  title     String   @map("title")
  userId    String   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relationships
  user  User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks Task[]

  @@index([userId])
  @@map("lists")
}

// ───────────────────────────────────
// TASK MODEL
// ───────────────────────────────────

model Task {
  id          String   @id @default(cuid()) @map("task_id")
  title       String   @map("title")
  description String?  @map("description")
  completed   Boolean  @default(false) @map("completed")
  listId      String   @map("list_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relationships
  list List @relation(fields: [listId], references: [id], onDelete: Cascade)

  @@index([listId])
  @@index([completed])
  @@map("tasks")
}
