---
description:
globs:
alwaysApply: false
---

# Rules Adding new code to the code base

1. Keep all code D.R.Y! Do not repeat code! No exceptions! Extract reusable code into a helper function, custom hook, utility or reusable standalone component.
2. For any common UI component, for example but limited to Buttons, Inputs, Cards, Text, Alerts, Toasters, Dialogs, Links etc: ALWAYS re-use existing components. For example, when the user asks for a colour that doesnt exist in the theme do not hard code it add the new variable. or if the component already has a color applied to it but the user asked for a different color you can always assume that the variable need to change. The user will never ask for an anti pattern without explaining and explicitly stating it when asking for code to be implemented
3. Think about the user experience! Graceful error handling, and redirecting to a previous route. A user should never be stuck on a 404 page and not know why, and they always need a way to navigate to an alernative rotue if possible.
4. Always think ahead. Think of the next person who will read or edit your code. will they understand it. will components be easily updated, will a component be robust enough to handle most edge cases?
5. Never assume! Ask the user to clarify if something doesnt make completely sense to you.
6. When removing any line of code: You must always tripple check what the exact cause and effect will be when removing any line of code ( even a prop passed to a component, or a paramater passe to a function).
7. Never leave deadcode, always inform the user about any dead code and ask for next steps.
8. create a cursor notebook todo list when starting any task
9. Dont be lazy. Think about what your code could be impacting elsewhere that doesnt relate to the file you are working in.
